Given the root node of a binary search tree, return the sum of values of all nodes with value between L and R (inclusive).

The binary search tree is guaranteed to have unique values.
###############################################################

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int sum=0;
    public void preorder(TreeNode root, int l,int r){
        if(root==null){
            return;
        }
        if(root.val>=l &&root.val<=r){
            sum+=root.val;
        }
        preorder(root.left,l,r);
        preorder(root.right,l,r);
    }
    public int rangeSumBST(TreeNode root, int L, int R) {
        preorder(root,L,R);
        return sum;
        
    }
}
